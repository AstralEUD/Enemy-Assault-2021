author = "Astral"; // Author
onLoadName = "[ASTRO] 자본주의 Enemy Assault 작전"; // Mission name (temporary solution; actual name set in editor will be used later in the alpha)
onLoadMission = "스스로 돈을 벌어서 필요한 장비를 구매하세요! // 로딩시간이 약간 길 수 있으니 잠시만 기다려 주세요!"; // Description
loadScreen = "pics\ghostadmin_icon.paa"; // Preview picture
overviewText = "Enemy forces occupy most of the island. Await orders from command and complete all tasks given. Good Luck.";
//overviewPicture = "pics\overview.paa";
class Header
{
  gameType = Coop;
  minPlayers = 1;
  maxPlayers = 34;
};

enableDebugConsole = 1;
ShowGPS = 1;
showSquadRadar = 0;

class Params
{
	//#define WEATHER_DEFAULT  25 
	//#include "\a3\functions_f\Params\paramWeather.hpp"

	#include "ghst_params.hpp"

};

//new system
class CfgTaskEnhancements
{
   enable       = 1;            //0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
   3d           = 0;            //0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
   3dDrawDist   = 10000;        //3d marker draw distance (default: 2000)
   share        = 1;            //0: do not count assigned players (default), 1: count how many players have the task assigned
   propagate    = 1;            //0: do not propagate (default), 1: propagate shared tasks to subordinates
};

// description.ext settings for revive
///////////////////////////////////////////////////////////////////////////////////////////
/*
RespawnDialog = 0;
*/
class CfgRespawnTemplates
{
	// Class used in respawnTemplates entry
	class Ghst_recover_gear
	{
		// Function or script executed upon death. Parameters passed into it are the same as are passed into onPlayerKilled.sqf file
		//onPlayerKilled = "ghst_fnc_savegear";
		// Function or script executed upon respawn. Parameters passed into it are the same as are passed into onPlayerRespawn.sqf file
		onPlayerRespawn = "ghst_fnc_loadgear";
	};
};

respawn = "BASE";
respawnDelay = 5;
respawnTemplates[] = {"MenuPosition","Ghst_recover_gear"};//,"menuInventory"
respawnOnStart = -1;
ReviveMode = 1;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 2;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 1;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 6;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 5;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 180;              //unconscious state duration (in secs)
disabledAI = 1;
corpseManagerMode = 1; //Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable 
corpseLimit = 20; //Max number of bodies which can be available at the same time. When exceeded, start deleting immediately. 
corpseRemovalMinTime = 120; //Minimal time in seconds a body stays in the scene (can't be removed sooner). 
corpseRemovalMaxTime = 240; //Maximal time in seconds after which a dead body is removed (can't stay longer) 
minPlayerDistance = 100; // meters. Default: 0
wreckManagerMode = 1; //Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable 
wreckLimit = 20; //Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately. 
wreckRemovalMinTime = 120; //Minimal time in seconds a wreck stays in the scene (can't be removed sooner). 
wreckRemovalMaxTime = 240; //Maximal time in seconds after which a wreck is removed (can't stay longer)
skipLobby = 1;

class RscTitles
{
	#include "cau\extendedchat\RscTitles.cpp"
	#include "ast\hud\RscTitles.hpp"
};


#include "functions\dlg\Spawnveh.hpp"
#include "functions\dlg\objlist.hpp"
#include "CHVD\dialog.hpp"

//zloadout
#include "zload\defines.hpp"//можно и нет она уже должна быть в сервере 
#include "zload\dialogLoadout.hpp"
#include "zload\dialogHelp.hpp"
#include "zload\dialogSave.hpp"
/*──────────────────────────────────────────────────────┐
│   Author: Connor                                      │
│   Steam:  https://steamcommunity.com/id/_connor       │
│   Github: https://github.com/ConnorAU                 │
│                                                       │
│   Please do not modify or remove this comment block   │
└──────────────────────────────────────────────────────*/
#include "cau\userinputmenus\systems\_macros.inc"
#include "cau\userinputmenus\systems\_defines.inc"
#include "cau\userinputmenus\controls.cpp"
#include "cau\userinputmenus\systems\displayColorPicker.cpp"
#include "cau\userinputmenus\systems\displayGuiMessage.cpp"
#include "cau\userinputmenus\systems\displayListbox.cpp"
#include "cau\userinputmenus\systems\displayListboxMulti.cpp"
#include "cau\userinputmenus\systems\displayProgressBar.cpp"
#include "cau\userinputmenus\systems\displaySlider.cpp"
#include "cau\userinputmenus\systems\displayText.cpp"
#include "cau\userinputmenus\systems\displayTextMulti.cpp"

// VAM_GUI
#include "VAM_GUI\defines.hpp"
#include "VAM_GUI\VAM_GUI_controls.hpp"
#include "VAM_GUI\VAM_GUI_classes.hpp"
// ASTRO (ast)
#include "ast\arsenal\ast_dialog.hpp"
// Trait Changer
#include "Trait_Changer\defines.hpp"
#include "Trait_Changer\TC_GUI_controls.hpp"
#include "Trait_Changer\TC_GUI_classes.hpp"
// SCM
#include "SakyContextMenu\dialog.hpp"

class cfgFunctions {
	//ghst functions
	#include "functions\cfgfunctions.hpp"
	#include "CHVD\CfgFunctions.hpp"
	//zloadout
	#include "ZLoad\functions.hpp"
	#include "cau\extendedchat\CfgFunctions.cpp"
    #include "cau\userinputmenus\CfgFunctions.cpp"
	//ASTRO
	#include "ast\CfgFunctions.hpp"
	//SCM	
	#include "SakyContextMenu\functions.hpp"
	class KS
	{	
		class normalFunctions
		{
			file = "external\flip";	// Folder where all functions are.
			class unflipVehicle {};
			class unflipVehicleAddAction {};
		};
	};	
};

class cfgEmoji {
	/*class unique_emoji_class {
		displayName="Emoji Display Name";
		icon="file\path\to\my\emoji.paa";
		keywords[]={"emoji_keyword"}; // will be recognized as :emoji_keyword: in chat
		shortcuts[]={">:D"}; // >:D will also be recognized as this emoji (optional)
		condition="true"; // Restrict who can use this emoji to whoever meets the condition
		};*/
	#include "cau\extendedchat\emojipack\config.cpp"
};

// Comm Menu
///////////////////////////////////////////////////////////////////////////////////////////
#include "comm_menu.h"
///////////////////////////////////////////////////////////////////////////////////////////
//Debrief
class CfgDebriefing
{  
	class End1
	{
		title = "Mission Completed";
		subtitle = "";
		description = "Good Job Ladies! You made it out alive!";
		pictureBackground = "";
		picture = "b_inf";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	class Fail
	{
		title = "Mission Failed";
		subtitle = "";
		description = "You all died";
		pictureBackground = "";
		picture = "b_inf";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
};

// Enables the extended chat mod
CAU_xChat_enabled = 1; // 0 - disabled, 1 - enabled (default)

// Enables the use of emojis in chat. Automatically disabled if no emojis are found on the client
CAU_xChat_emojis = 1; // 0 - disabled, 1 - enabled (default)

// Toggle "<Name> connected" logs when a player loads into mission
CAU_xChat_connectMessages = 1; // 0 - disabled, 1 - enabled (default)

// Toggle "<Name> disconnected" logs when a player leaves the mission
CAU_xChat_disconnectMessages = 1; // 0 - disabled, 1 - enabled (default)

// Toggle "<Name1> was killed by <Name2>" and "<Name> was killed" when a player dies
CAU_xChat_deathMessages = 1; // 0 - disabled, 1 - enabled (default)

// Enables mentioning groups
CAU_xChat_mentionGroups = 1; // 0 - disabled, 1 - enabled (groups of player's side, default), 2 - enabled (all groups)

//Enables whisper command. Allows sending private chat messages to other players, groups and roles
CAU_xChat_whisperCommand = 1; // 0 - disabled, 1 - enabled (default)

// System logs printed to chat when the player loads into the mission
CAU_xChat_MOTD[]={
//  {delay before printing,message}
    {2,"Welcome To Enemy Assault 2021 !!"}
};


// SAKY EM_DEVICE SCRIPT
class CfgHints
{
	class SpectrumDevice
	{
		displayName = "스펙트럼 장치";
		
		class SpectrumDeviceMain6
		{
			displayName = "SIGINT 정보";
			displayNameShort = "아는 것이 힘이다.";
			description = "특정 전파 발신원들의 주파수는 아래와 같이 알려져있습니다.%1%2[78-89MHz] 장교 및 시민용 스마트폰 전파%1%2[390-500MHz] 임무 목표 추적용 미약 전계 발생기(+약간의 주파수 떨림) %1%2[431MHz] 일반 지뢰류%1%2[433MHz] 원격 기폭 가능한 폭발물%1%2[435MHz] IED(대형 IED의 경우 더 큰 주파수 떨림)%1%2[79.3,81.2,84.6,85.5MHz] 일부 군용 통신 시설";			
			tip = "군용 및 민간 통신시설은 스펙트럼 장치가 탐지할 수 있는 모든 주파수 대역을 사용합니다.";
			image = "\a3\ui_f\data\gui\cfg\hints\Direction_ca.paa";
			noImage = false;
			//dlc = -1;
		};
		
		class SpectrumDeviceMain5
		{
			displayName = "강력한 전파 발생원";
			description = "라디오 타워나 레이돔과 같은 구조물에서는 강력한 전계가 방출되어 먼 거리에서도 스펙트럼 장비에 감지됩니다.%1일부 시설은 [%11]에 감지되는 주파수가 아닌, [%12]에서 감지되는 군용 주파수를 사용해 위치 추적에 혼란을 줄 수 도 있습니다.";
			tip = "%2강력한 전파 발생원의 주파수는 지도상에 작게 표기되어있습니다.%1%2해당 구조물을 파괴하는 것도 전략적 선택이 될 수 있지만, 그러한 발생원을 등지고 전파를 추적하는 것이 더욱 쉽습니다.";
			arguments[] = {
				"getText (configfile >> 'CfgWeapons' >> 'muzzle_antenna_02_f' >> 'displayName');",				
				"getText (configfile >> 'CfgWeapons' >> 'muzzle_antenna_01_f' >> 'displayName');"
			};
			image = "\a3\ui_f\data\gui\cfg\hints\Voice_ca.paa";
			noImage = false;
			//dlc = -1;
		};
		
		class SpectrumDeviceMain4
		{
			displayName = "%11";
			displayNameShort = "안테나 선택";
			description = "[%11]는 지뢰와 폭발물을 제어하기 위해 사용되는 전파 신호를 감지합니다.%1지뢰와 폭발물을 기폭하기 위해서는 주파수를 맞추어 최소 -40dbm 이상의 신호를 전송해주어야 합니다.";
			tip = "%2폭발물 기폭을 위해서는 안테나를 정확히 지향해야 합니다. %1%2대형 IED와 도약지뢰와 같은 위험한 폭발물을 제거할때는 신중하게 사용하세요.";
			arguments[] = {
				"getText (configfile >> 'CfgWeapons' >> 'muzzle_antenna_03_f' >> 'displayName');"
			};
			image = "\a3\Weapons_F_Enoch\Pistols\ESD_01\data\ui\gear_muzzle_antenna_03_ca.paa";
			noImage = false;
			//dlc = -1;
		};		
		
		class SpectrumDeviceMain3
		{
			displayName = "%11";
			displayNameShort = "안테나 선택";
			description = "[%11]는 넓은 주파수 범위에서 전파의 발생원을 추적합니다. 임무를 위해 회수해야 하는 물체는 대부분 추적을 위해 특별한 미약 전계 발생기가 장착되어 있습니다.%1폭발물에서 발생하는 433Mhz 대역의 주파수와 맵 전역의 강력한 전파 발생원의 신호에 주의하세요.";
			tip = "%2회수대상 물체의 미약 전계 발생기는 의도적으로 주파수가 흔들리도록 설계되었습니다.%1%2이 차이를 이용해 강력한 전파 발생원과 구분할 수 있습니다.";
			arguments[] = {
				"getText (configfile >> 'CfgWeapons' >> 'muzzle_antenna_02_f' >> 'displayName');"
			};
			image = "\a3\Weapons_F_Enoch\Pistols\ESD_01\data\ui\gear_muzzle_antenna_02_ca.paa";
			noImage = false;
			//dlc = -1;
		};		
		
		class SpectrumDeviceMain2
		{
			displayName = "%11";
			displayNameShort = "안테나 선택";
			description = "[%11]는 좁은 대역에서 지휘를 장교 혹은 인질들의 휴대전화에서 발생하는 전파를 감지하거나, 차량과 같은 장비에서 사용되는 통신 장비의 전파를 감지합니다.";
			tip = "%2시민의 휴대전화는 최대 1km, 차량은 3km 내에서 감지될 수 있습니다.%1%2통신용 주파수를 사용하는 강력한 전파 발생원에 주의하세요.";
			arguments[] = {
				"getText (configfile >> 'CfgWeapons' >> 'muzzle_antenna_01_f' >> 'displayName');"
			};
			image = "\a3\Weapons_F_Enoch\Pistols\ESD_01\data\ui\gear_muzzle_antenna_01_ca.paa";
			noImage = false;
			//dlc = -1;
		};
		
		class SpectrumDeviceMain1
		{
			displayName = "스펙트럼 장치";
			description = "스펙트럼 장치를 활용하면 주변의 적군이나 장비, 혹은 찾기 어려운 소형 컨테이너와 같은 장비를 찾아내거나, 심지어 지뢰와 같은 폭발물을 찾고 미리 격발시킬 수 있습니다.%1스펙트럼 기기를 사용하기 위해서는 안테나를 추가로 장착해야 하며, 각 안테나마다 수색하는 주파수 범위와 용도가 다릅니다.";
			tip = "스펙트럼 장치는 작은 신호를 찾아내기 위해 지향성이 좋도록 설계되었기 때문에, 목표물의 정확한 위치를 찾기 위해서는 목표물에 정확히 조준되어야 합니다.";
			arguments[] = {
				{{"getOver"}}, // Double nested array means assigned key (will be specially formatted)
				{"name"}, // Nested array means element (specially formatted part of text)
				"name player" // Simple string will be simply compiled and called, String can also link to localization database in case it starts by str_
			};
			image = "\a3\data_f_enoch\logos\arma3_enoch_hint_icon_ca.paa";
			noImage = false;
			//dlc = -1;
		};
	};
};